'use strict';

/*
 * tnwae's wee li'l asset pipeline, targetted at Jekyll users but
 * probably good enough for anyone.
 *
 * Version 2021,1
 * WTFPL
 */

const gulp          = require('gulp');
const gutil         = require('gulp-util');
const haml          = require('gulp-ruby-haml');
const source_map    = require('gulp-sourcemaps');
const uglify        = require('gulp-uglify');
const child         = require('child_process');
const scaffolds     = '_haml/*.haml';

// Build a Jekyll site the JavaScript way.  Jekyll, and hence the
// RubyGems directory, must be on your PATH.
var jekyll_build = function() {
  const jekyll = child.spawn('jekyll', ['build']);

  const jekyll_logger = (buffer) => {
    buffer.toString()
      .split(/\n/)
      .forEach((message) => gutil.log('build: ' + message));
  };

  jekyll.stdout.on('data', jekyll_logger);
  jekyll.stderr.on('data', jekyll_logger);
}

var jekyll_serve = () => {
  const jekyll = child.spawn('jekyll', ['serve', '--watch'])

  const jekyll_logger = (buffer) => {
    buffer.toString()
      .split(/\n/)
      .forEach((message) => gutil.log('build: ' + message));
  };

  jekyll.stdout.on('data', jekyll_logger);
  jekyll.stderr.on('data', jekyll_logger);
}

// Build the Haml scaffolds and dump them into _includes.
gulp.task('haml', function() {
  return gulp.src(scaffolds)
    .pipe(haml().on('error', function(e) { console.log(e.message) }))
    .pipe(gulp.dest('_includes'));
});

// Build the site prior to deployment.
gulp.task('jekyll', ['haml'], jekyll_build);

// Build everything and watch for changes.  This is for debug builds.
gulp.task('watch', ['haml'], () => {
  gulp.watch(scaffolds, ['haml']);
  jekyll_serve();
});

// So that the tasks are run once before the watch is initiated, the
// default task runs the builds before watching for changes.  When
// Jekyll is run concurrently, it will listen for changes generated by
// Gulp and roll those changes into its site build.  Yes, this does
// lengthen the builds somewhat, but the tradeoff is apt, I think.
gulp.task('default', ['haml', 'watch']);

